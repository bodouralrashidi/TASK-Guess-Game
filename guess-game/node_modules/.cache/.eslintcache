[{"/Users/bodouralrashidi/Desktop/FullStack/Phase3/guess-game/src/index.js":"1","/Users/bodouralrashidi/Desktop/FullStack/Phase3/guess-game/src/App.js":"2","/Users/bodouralrashidi/Desktop/FullStack/Phase3/guess-game/src/reportWebVitals.js":"3","/Users/bodouralrashidi/Desktop/FullStack/Phase3/guess-game/src/Components/GuessNumber.js":"4"},{"size":535,"mtime":1652282323136,"results":"5","hashOfConfig":"6"},{"size":464,"mtime":1652289696515,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1652282323136,"results":"8","hashOfConfig":"6"},{"size":1274,"mtime":1652289669374,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qeqfba",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"/Users/bodouralrashidi/Desktop/FullStack/Phase3/guess-game/src/index.js",[],[],"/Users/bodouralrashidi/Desktop/FullStack/Phase3/guess-game/src/App.js",["25","26","27"],[],"import React, { useState } from \"react\";\nimport GuessNumber from \"./Components/GuessNumber\";\nfunction App() {\n  const [guessNumber, setguessNumber] = useState(\"\");\n  const [attempt, setAttempt] = useState(3);\n  const randNumber = () => {\n   let rand = Math.floor(Math.random() * 100);\n   console.log(\"guess\",rand)\n    return rand\n  };\n\n  return (\n    <div>\n      <GuessNumber  number = {randNumber()}  attempt1 = {attempt}/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bodouralrashidi/Desktop/FullStack/Phase3/guess-game/src/reportWebVitals.js",[],[],"/Users/bodouralrashidi/Desktop/FullStack/Phase3/guess-game/src/Components/GuessNumber.js",["28","29"],[],"import React, { useState } from \"react\";\n\nfunction GuessNumber(number , attempt1) {\n  const [guess, setGuess] = useState(\"\");\n  const [guessText, setGuessText] = useState(\"\");\n  number = number.number\n  const [attempt, setAttempt] = useState(attempt1.attempt);\nconsole.log(attempt1)\n\n  const checkNumber = (guess) => {\n      \n      guess = parseInt(guess)\n      number = parseInt(number)\n      console.log(\"guess\", number)\n      console.log(\"my guess\", guess)\n    if (attempt > 0){\n    if (guess === number) {\n      setGuessText(`Guess is correct`);\n     \n    } else if (guess >= number) {\n      setGuessText(`Guess is High`);\n      setAttempt(--attempt)\n    } else if (guess <= number) {\n      setGuessText(`Guess is low`);\n      setAttempt(--attempt)\n    }\n    else\n    {lost()}\n    \n\n}\n\n  };\nconst lost = ()=>\n{\n    setGuessText(\"YOU LOST\")\n //disable \n}\n  return (\n    <div>\n      <h1>Enter your number </h1>\n      <input\n      id = \"guess\"\n        placeholder=\"Guess the number\"\n        onChange={(event) => {\n          setGuess(event.target.value);\n        }}\n      ></input>\n      <button\n        onClick={() => {\n          checkNumber(guess);\n        }}\n      >\n        Click\n      </button>\n      <h1>{guessText}</h1>\n    </div>\n  );\n}\n\nexport default GuessNumber;\n",[],{"ruleId":"30","severity":1,"message":"31","line":4,"column":10,"nodeType":"32","messageId":"33","endLine":4,"endColumn":21},{"ruleId":"30","severity":1,"message":"34","line":4,"column":23,"nodeType":"32","messageId":"33","endLine":4,"endColumn":37},{"ruleId":"30","severity":1,"message":"35","line":5,"column":19,"nodeType":"32","messageId":"33","endLine":5,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":22,"column":20,"nodeType":"32","messageId":"38","endLine":22,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":25,"column":20,"nodeType":"32","messageId":"38","endLine":25,"endColumn":27},"no-unused-vars","'guessNumber' is assigned a value but never used.","Identifier","unusedVar","'setguessNumber' is assigned a value but never used.","'setAttempt' is assigned a value but never used.","no-const-assign","'attempt' is constant.","const"]